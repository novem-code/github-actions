# MIT License
# 
# Copyright (c) 2019 Aaron
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# vendorized from abatilo/actions-poetry
name: "Python Poetry Action"
author: "@abatilo"
description: "An action to run https://github.com/python-poetry/poetry"
branding:
  icon: "truck"
  color: "gray-dark"
inputs:
  poetry-version:
    description: "The version of poetry to install"
    required: false
    default: "latest"
  poetry-plugins:
    description: "The whitespace/newline-separated list of poetry plugins to install."
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - run: |
        python3 -m pip install --user pipx
        python3 -m pipx ensurepath
      shell: bash
    - if: ${{ inputs.poetry-version == 'latest' }}
      run: |
        pipx install poetry
      shell: bash
    - if: ${{ inputs.poetry-version == 'main' }}
      run: |
        pipx install git+https://github.com/python-poetry/poetry.git@main
      shell: bash
    - if: ${{ inputs.poetry-version != 'latest' && inputs.poetry-version != 'main' }}
      run: |
        pipx install poetry==${{ inputs.poetry-version }}
      shell: bash
    - if: ${{ inputs.poetry-plugins != '' }}
      run: |
        ALL_PLUGINS=$(echo "${{ inputs.poetry-plugins }}")
        for PLUGIN in $ALL_PLUGINS; do
          poetry self add $PLUGIN
        done
      shell: bash
